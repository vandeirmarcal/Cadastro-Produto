{ ------------------------- INFORMAÇÕES GERAIS ---------------------------------
  bCriterioSql (Representa os critérios SQL)
  Data início: 13/06/2016

  Vandeir Roberto Marçal
  AJI - Sistemas
 ----------------------------------------------------------------------------- }
unit bCriterioSql;

interface

USES bBaseSql;

 type TCriterio = class (TBaseSql)
   private

   protected

   public
     { -----------------------  MANUTENÇÃO OBJETOS --------------------------- }

     {
      Cria um novo objeto da classe TSelect
     }
     constructor Create; override;


     destructor Destroy  ;  override;

     procedure Clear; override;

     procedure addCriterio(campo, valor : string; operador: string);

     procedure andCriterio(campo, valor : string; operador: string);

     procedure orCriterio(campo, valor : string; operador: string);

     function buildCriterio : string;

     { -------------------------- GERAL -------------------------------------- }

 end;

implementation

uses
 sysutils;

// -------------------------------------------------------------------------- //
// ------------------------ MANUTENÇÃO OBJETOS ------------------------------ //
// -------------------------------------------------------------------------- //

Constructor TCriterio.Create;

begin
  inherited Create;
end;

Destructor TCriterio.Destroy;

begin
  inherited;
end;

procedure TCriterio.Clear;

begin
  inherited;
end;

procedure TCriterio.addCriterio(campo, valor : string; operador: string);
begin

  // Adiciono uma posição na estrutura
  SetLength(campo, Length(campo)+1);

  // Monto o critério
  campoSql[Length(campoSql)].nomeCampo   := campo;
  campoSql[Length(campoSql)].parametro   := 'p'+campo;
  campoSql[Length(campoSql)].valorCampo  := valor;
  campoSql[Length(campoSql)].operador    := operador;
  campoSql[Length(campoSql)].condicional := '';
end;

procedure TCriterio.andCriterio(campo, valor : string; operador: string);
begin

  // Adiciono uma posição na estrutura
  SetLength(campoSql,Length(campoSql)+1);

  // Monto o critério
  campoSql[Length(campoSql)].nomeCampo   := campo;
  campoSql[Length(campoSql)].parametro   := 'p'+campo;
  campoSql[Length(campoSql)].valorCampo  := valor;
  campoSql[Length(campoSql)].operador    := operador;
  campoSql[Length(campoSql)].condicional := 'AND';
end;

procedure TCriterio.orCriterio(campo, valor : string; operador: string);
begin

  // Adiciono uma posição na estrutura
  SetLength(campoSql,Length(campoSql)+1);

  // Monto o critério
  campoSql[Length(campoSql)].nomeCampo   := campo;
  campoSql[Length(campoSql)].parametro   := 'p'+campo;
  campoSql[Length(campoSql)].valorCampo  := valor;
  campoSql[Length(campoSql)].operador    := operador;
  campoSql[Length(campoSql)].condicional := 'OR';
end;

function TCriterio.buildCriterio : string;

var i : integer;

begin

  // Iniializo a vari'avel
  Result := '';

  for i := 0 to Length(campoSql) -1 do
  begin
    if (campoSql[Length(campoSql)].operador <> EmptyStr) then
    begin

      // Monto o critério
      Result := Result+''+ campoSql[i].nomeCampo+' '+campoSql[i].operador+' '+':'+
                campoSql[i].parametro;
    end;
  end;
end;

end.

