unit bCadPrdutos;

interface

uses dbclient, bSelect, bInsert;

type
  TCadProdutos = class
  private

    { -- ESTRUTURA --
     CDS Produto
    }
    cdsProd : TClientDataSet;

    { -- ESTRUTURA --
     Objeto responsável por executar consultas no banco de dados
    }
    select : TSelect;

  public

    {
      Construtor
    }
    constructor create;

    {
      Destroi objeto
    }
    destructor destroy;

    {
     Carrego os produtos

       Parametros :
         tipo - tipo do campo que será chave da cosulta
           0 - Todos os produtos
           1 - nome
           2 - codigo

       Retorna :
         Cliente DataSet com os produtos consultados
    }
    function loadProdutos(tipo : integer; campo : string) : TClientDataSet;

    function insereProduto(nome, unidade, codigo : String; precoCusto,
                           precoVenda : double) : boolean;
  end;

implementation

constructor TCadProdutos.create;
begin

  // Crio objeto
  select := TSelect.Create;
end;

destructor TCadProdutos.destroy;
begin

  // Destruo objeto
  select.Free;
end;

function TCadProdutos.loadProdutos(tipo : integer; campo : string) : TClientDataSet;
begin

  select.Clear;
  select.addColuna('*');
  select.addTable('PRODUTO', '');

  case tipo of
    1: select.addCriterio('NOME','%'+campo+'%','LIKE');
    2: select.addCriterio('CODIGO', campo, '=');
  end;
  select.Execute(cdsProd);

  Result := cdsProd;
end;

function TCadProdutos.insereProduto(nome, unidade, codigo : String; precoCusto,
                                                 precoVenda : double) : boolean;

var insert : TInsert;

begin

  insert := TInsert.Create;
  insert.Clear;

  insert.addColuna('NOME', nome);
  insert.addColuna('UNIDADE', unidade);
  insert.addColuna('PRECO_CUSTO', precoCusto);
  insert.addColuna('PRECO_VENDA', precoVenda);
  insert.addColuna('CODIGO', codigo);
  insert.addTable('PRODUTO', '');
  insert.Execute;

end;

end.
